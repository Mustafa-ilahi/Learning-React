const bulbSwitch = true;

Binary Operators:-

{!bulbSwitch && <img src="OffBulb"/>}
{bulbSwitch && <img src="OnBulb"/>}


Ternary Operators:-

{bulbSwitch ?
<img src="OnBulb"/>
:
<img src="OffBulb"/>
} 

<img src={bulbSwitch ? bulbOn : bulbOff}


Todo Add items:

const addItem = () =>{
const tempList = [...list]; //Copying orignal state
tempList.push(text);  //push on new array
setList(tempList);  // Update state
}


Components:
1)Agr screenWise components banayengy to src k andr  Views/Screen ka folder banega.
1)Agr reuseable components banayengy to src k andr components ka folder banega.

Note: Component name always starts with capital letter. 


/*
Child se parent ki state change karna:
  1) Create a function in Parent component that will
  update the state
  2) Pass that function into Child component via props
  3) Call that function on any event
*/


Hooks

useEffect Component ki zindagi mai ek bar chlega.It takes 2 parametes one is call back function the second one is dependency list(ye wo list hoti ha jis pr useEffect dependent hoti ha)

useEffect = (()=>{

},[currentQuestion])

dependencyList ===> currentQuestion == jb bh ye change h0ga useEffect chlega


useEffect(() =>{},[]
1)Intial: Kch kam krwana ho Component render ho or  sirf ek martaba. [] e.g. API requests
2)Updation: Kch km krwana kisi state ya props ke updation pr [currentQuestion]
3)Unmounting: Kch km krwana ho component end hone se pehle e.g: removeEventListeners.
3==> return () => {
	console.log('unmount')
}


****** Firebase ******
1)Goto console.firebase.com
2)Add Project
3)Install firebase into your project (npm install firebase)
4)Goto project setting and choose webapp then register your app
5)copy cdn <script> tag
6) Create folder in src ==> named as ==> config==> firebase.js
7)import firebase from 'firebase'
8)Paste cdn script into firebase.js

***** Firebase Authentication*****  
1)Goto Authentication
2)Select Email/password
3)search==> firebase web authentication
4)copy firebase.auth().createUserWith email wala function
5)and same for login 


****Steps for getting firebase authentication resposnse in components****

1)**** In firebase we remove then and catch method uski jaga return lga dengy bs****


2)const signIn = async () => {
try{
 const user = await login(email,password);
setUserLoggedIn(true)
}catch(e){
setErrorMessage(e.message);
}
}
<button onClick={()=> signIn}>Sign In </button>


**** Adding something in firestore-database  with random id*****
const db = firebase.firestore();

db.collection('users').add({email,password})
Note: it generates random ID


**** Adding something in firestore-database  set ID manually*****
db.collection('users').doc(user.uid).set({email,password})
Note: it doesn't generates random ID


**** Getting data from firebase ****

